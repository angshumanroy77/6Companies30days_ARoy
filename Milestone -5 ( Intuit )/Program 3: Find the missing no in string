long long solve(string temp)
{
    int n = temp.size();
    long long num=0;
    for(int i=0;i<n;i++)
    {
        num = num*10+temp[i]-'0';
    }
    return num;
}

int missingNumber(const string& str)
{
    // Code here
    int n = str.size();
    for(int l=1;l<=6;l++)
    {
        int i=0;
        string temp = str.substr(i,l);
        long long prev = solve(temp);
        int c=0;
        int flag=0;
        temp="";
        long long num;
        int j=l;
        while(j<str.size())
        {
            temp = temp+str[j];
            j++;
            if(prev+1==solve(temp))
            {
                prev = solve(temp);
                temp="";
            }
            else if(prev+2==solve(temp))
            {
                c++;
                num = prev+1;
                prev = solve(temp);
                temp="";
            }
            else if(prev<solve(temp))
            flag=1;
        
        }
        if(c==1 and flag==0)
        return num;
    }
    return -1;

}
