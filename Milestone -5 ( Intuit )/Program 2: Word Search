class Solution {
public:
bool dfs(vector<vector<char>>& board,string word,int i,int j,int pos)
    {
        int m=board.size();
        int n=board[0].size();
        if(i<0 || j<0 || i>=m || j>=n)
        return false;
        if(pos==word.length())
        return true;
        if(word[pos]==board[i][j])
        {
            char temp=board[i][j];
            board[i][j]='#';
            bool up=dfs(board,word,i-1,j,pos+1);
            bool down=dfs(board,word,i+1,j,pos+1); 
            bool left=dfs(board,word,i,j-1,pos+1);
            bool right=dfs(board,word,i,j+1,pos+1);
            board[i][j]=temp;
            return (up||down||left||right);
        }
        else
        return false;
        
    }
    bool isWordExist(vector<vector<char>>& board, string word) {
        // Code here
         int r=board.size();
       int c=board[0].size();
      for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(board[i][j]==word[0])
                {
                    if(dfs(board,word,i,j,0))
                    return true;
                }
            }
        }
        return false;
    }
};
