class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
      if(grid.empty()) return 0;
        int total=0,cntrot=0,days=0;
        int m=grid.size(),n=grid[0].size();
        queue<pair<int ,int>>q;
        for(int i=0;i<m;i++)
        for(int j=0;j<n;j++)
        {
            if(grid[i][j]!=0) total++;
            if(grid[i][j]==2) q.push({i,j});
        }
        int dx[4]={0,1,0,-1};
        int dy[4]={1,0,-1,0};
        while(!q.empty())
        {
            int sz=q.size();
            cntrot+=sz;
            while(sz--)
            {
                int x=q.front().first,y=q.front().second;
                q.pop();
                for(int i=0;i<4;i++)
                {
                    int m1=dx[i]+x,n1=dy[i]+y;
                    if(m1>m-1||n1>n-1||m1<0||n1<0||grid[m1][n1]!=1)
                    continue;
                    grid[m1][n1]=2;
                    q.push({m1,n1});
                }
            }
            if(!q.empty()) days++;
            }
        return (cntrot==total)?days:-1;  
    }
};
